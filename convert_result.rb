require 'rubygems'
require 'debugger'

#results = File.open('./results.txt').read
def results
  <<-TEXT
  3, 3_17, 27, 51,48,0,
  3, 3_17, 28, 60,49,1,
  3, 3_17, 28, 60,48,2,
  3, ex-1, 16, 28,44,0,
  3, ex-1, 16, 28,32,1,
  3, ex-1, 16, 28,32,2,
  3, Fredkin gate, 15, 27,38,0,
  3, Fredkin gate, 15, 27,50,1,
  3, Fredkin gate, 15, 27,50,2,
  3, ham3, 9, 13,52,0,
  3, ham3, 20, 36,33,1,
  3, ham3, 20, 36,49,2,
  3, Miller gate, 26, 50,47,0,
  3, Miller gate, 26, 50,33,1,
  3, Miller gate, 26, 50,51,2,
  3, one-two-three, 24, 40,53,0,
  3, one-two-three, 22, 42,52,1,
  3, one-two-three, 22, 42,53,2,
  3, Peres gate, 6, 10,50,0,
  3, Peres gate, 6, 10,51,1,
  3, Peres gate, 6, 10,51,2,
  3, Toffoli gate, 5, 9,49,0,
  3, Toffoli gate, 5, 9,51,1,
  3, Toffoli gate, 5, 9,49,2,
  4, 4_49, 105, 245,54,0,
  4, 4_49, 141, 338,55,1,
  4, 4_49, 147, 351,55,2,
  4, 4_49, 147, 351,54,3,
  4, aj-e11, 79, 177,54,0,
  4, aj-e11, 97, 243,55,1,
  4, aj-e11, 138, 328,55,2,
  4, aj-e11, 165, 395,53,3,
  4, f2, 1, 0,51,0,
  4, f2, 7, 0,51,1,
  4, f2, 2, 0,48,2,
  4, f2, 1, 0,49,3,
  4, hwb4, 83, 191,55,0,
  4, hwb4, 83, 203,55,1,
  4, hwb4, 67, 151,55,2,
  4, hwb4, 144, 348,54,3,
  4, Doubled Toffoli gate, 10, 26,51,0,
  4, Doubled Toffoli gate, 10, 26,51,1,
  4, Doubled Toffoli gate, 10, 26,52,2,
  4, Doubled Toffoli gate, 10, 26,51,3,
  5, hwb5_13, 402, 1060,57,0,
  5, hwb5_13, 378, 1026,56,1,
  5, hwb5_13, 417, 1099,56,2,
  5, hwb5_13, 647, 1803,56,3,
  5, hwb5_13, 834, 2332,56,4,
  5, mod5d1, 24, 84,54,0,
  5, mod5d1, 24, 84,53,1,
  5, mod5d1, 24, 84,53,2,
  5, mod5d1, 24, 84,53,3,
  5, mod5d1, 24, 84,52,4,
  5, mod5d2, 277, 703,57,0,
  5, mod5d2, 244, 684,56,1,
  5, mod5d2, 491, 1359,56,2,
  5, mod5d2, 506, 1436,56,3,
  5, mod5d2, 763, 2115,55,4,
  5, mod5mils_18, 25, 81,52,0,
  5, mod5mils_18, 25, 81,51,1,
  5, mod5mils_18, 20, 68,52,2,
  5, mod5mils_18, 20, 68,53,3,
  5, mod5mils_18, 20, 68,53,4,
  6, graycode6, 5, 5,54,0,
  6, graycode6, 5, 5,52,1,
  6, graycode6, 5, 5,50,2,
  6, graycode6, 5, 5,53,3,
  6, graycode6, 5, 5,53,4,
  6, graycode6, 5, 5,52,5,
  6, hwb6_14, 2444, 7182,40,0,
  6, hwb6_14, 2476, 7334,39,1,
  6, hwb6_14, 2314, 6872,40,2,
  6, hwb6_14, 2460, 7330,43,3,
  6, hwb6_14, 2675, 7937,52,4,
  6, hwb6_14, 4208, 12832,61,5,
  6, mod5adder, 405, 1159,52,0,
  6, mod5adder, 461, 1329,53,1,
  6, mod5adder, 573, 1697,55,2,
  6, mod5adder, 602, 1792,51,3,
  6, mod5adder, 576, 1722,56,4,
  6, mod5adder, 576, 1726,55,5,
  7, ham7, 12502, 39864,60,0,
  7, ham7, 11794, 37672,61,1,
  7, ham7, 11215, 35665,62,2,
  7, ham7, 10464, 33344,61,3,
  7, ham7, 11116, 35142,60,4,
  7, ham7, 11409, 36063,60,5,
  7, ham7, 17201, 55149,59,6,
  7, hwb7_15, 13282, 42090,63,0,
  7, hwb7_15, 12359, 39413,62,1,
  7, hwb7_15, 11951, 37993,62,2,
  7, hwb7_15, 11666, 36970,62,3,
  7, hwb7_15, 11403, 36063,60,4,
  7, hwb7_15, 12085, 38403,60,5,
  7, hwb7_15, 15206, 48586,58,6,
  8, hwb8_64, 60004, 197274,131,0,
  8, hwb8_64, 56127, 184683,132,1,
  8, hwb8_64, 51802, 170656,133,2,
  8, hwb8_64, 52353, 172095,132,3,
  8, hwb8_64, 51112, 167850,131,4,
  8, hwb8_64, 49173, 161723,131,5,
  8, hwb8_64, 51638, 169972,130,6,
  8, hwb8_64, 60655, 199815,125,7,
  8, mlp4, 18490, 59888,75,0,
  8, mlp4, 17275, 55941,76,1,
  8, mlp4, 17339, 55941,69,2,
  8, mlp4, 16261, 52435,69,3,
  8, mlp4, 15678, 50598,68,4,
  8, mlp4, 15778, 51902,66,5,
  8, mlp4, 13888, 86971,65,6,
  8, mlp4, 14519, 62831,62,7,
  8, urf2, 57437, 189165,118,0,
  8, urf2, 52770, 173736,116,1,
  8, urf2, 50209, 165319,117,2,
  8, urf2, 49403, 162597,115,3,
  8, urf2, 50027, 164513,116,4,
  8, urf2, 49519, 162799,115,5,
  8, urf2, 49052, 161310,115,6,
  8, urf2, 66142, 218376,116,7,
  9, hwb9, 252197, 839049,382,0,
  9, hwb9, 235637, 784687,387,1,
  9, hwb9, 223336, 744404,386,2,
  9, hwb9, 214986, 716398,386,3,
  9, hwb9, 212381, 707827,384,4,
  9, hwb9, 212163, 707343,385,5,
  9, hwb9, 208067, 693377,381,6,
  9, hwb9, 212142, 707300,383,7,
  9, hwb9, 251478, 837250,377,8,
  9, urf1, 243707, 810853,95,0,
  9, urf1, 221766, 738962,99,1,
  9, urf1, 216412, 721016,99,2,
  9, urf1, 203032, 676740,97,3,
  9, urf1, 206698, 688622,100,4,
  9, urf1, 205429, 684657,99,5,
  9, urf1, 202953, 676053,99,6,
  9, urf1, 204976, 682804,97,7,
  9, urf1, 247324, 823408,103,8,
  9, urf5, 89878, 299502,66,0,
  9, urf5, 83402, 277932,66,1,
  9, urf5, 81898, 273240,66,2,
  9, urf5, 79146, 263986,66,3,
  9, urf5, 75816, 252800,65,4,
  9, urf5, 77646, 258888,67,5,
  9, urf5, 81730, 272726,64,6,
  9, urf5, 85453, 285075,64,7,
  9, urf5, 98221, 327371,63,8,
  10, urf3, 756541, 2513529,295,0,
  10, urf3, 693212, 2307532,281,1,
  10, urf3, 653849, 2180925,296,2,
  10, urf3, 630096, 2099320,292,3,
  10, urf3, 630259, 2101203,327,4,
  10, urf3, 622580, 2074998,295,5,
  10, urf3, 617101, 2057555,291,6,
  10, urf3, 624933, 2083549,287,7,
  10, urf3, 632581, 2109843,285,8,
  10, urf3, 714802, 2378930,288,9,
  12, cycle10_2, 10122, 33124,2106,0,
  12, cycle10_2, 6079, 19987,2141,1,
  12, cycle10_2, 6079, 19987,2143,2,
  12, cycle10_2, 6079, 19987,2137,3,
  12, cycle10_2, 6079, 19987,2142,4,
  12, cycle10_2, 6079, 19987,2144,5,
  12, cycle10_2, 6079, 19987,2087,6,
  12, cycle10_2, 6079, 19987,2084,7,
  12, cycle10_2, 6079, 19987,2079,8,
  12, cycle10_2, 6079, 19987,2070,9,
  12, cycle10_2, 6079, 19987,2079,10,
  12, cycle10_2, 6079, 19987,2054,11,
  12, plus63mod4096, 8001476, 25641132,2982,0,
  12, plus63mod4096, 7719937, 24751827,3245,1,
  12, plus63mod4096, 5427998, 17434134,3228,2,
  12, plus63mod4096, 3450507, 11111331,3034,3,
  12, plus63mod4096, 2157669, 6960181,2793,4,
  12, plus63mod4096, 1294897, 4176893,2546,5,
  12, plus63mod4096, 666381, 2144381,2339,6,
  12, plus63mod4096, 636797, 2052763,2373,7,
  12, plus63mod4096, 669088, 2150556,2363,8,
  12, plus63mod4096, 658077, 2130281,2336,9,
  12, plus63mod4096, 638485, 2064045,2330,10,
  12, plus63mod4096, 850847, 2740961,2266,11,
  13, plus127mod8192, 40299251, 127560583,2617,0,
  13, plus127mod8192, 39414566, 124899186,2862,1,
  13, plus127mod8192, 26146900, 83025876,2780,2,
  13, plus127mod8192, 16849620, 53576938,2574,3,
  13, plus127mod8192, 10021776, 31912930,2333,4,
  13, plus127mod8192, 5642038, 17991204,2039,5,
  13, plus127mod8192, 3052954, 9734592,1838,6,
  13, plus127mod8192, 2881666, 9197032,1822,7,
  13, plus127mod8192, 2852304, 9104770,1813,8,
  13, plus127mod8192, 2719878, 8661212,1792,9,
  13, plus127mod8192, 2801085, 8934615,1788,10,
  13, plus127mod8192, 2773808, 8855420,1776,11,
  13, plus127mod8192, 3216450, 10229734,1769,12,
  13, plus63mod8192, 23747354, 74910872,2106,0,
  13, plus63mod8192, 23205842, 73240414,2353,1,
  13, plus63mod8192, 16384617, 51814777,2364,2,
  13, plus63mod8192, 10805148, 34213092,2222,3,
  13, plus63mod8192, 7052285, 22382674,2076,4,
  13, plus63mod8192, 4304599, 13649795,1915,5,
  13, plus63mod8192, 2562793, 8144899,1786,6,
  13, plus63mod8192, 1457038, 4633102,1696,7,
  13, plus63mod8192, 1280169, 4061761,1690,8,
  13, plus63mod8192, 1141400, 3634070,1680,9,
  13, plus63mod8192, 1401005, 4455904,1700,10,
  13, plus63mod8192, 1415074, 4506386,1700,11,
  13, plus63mod8192, 1754858, 5565320,1695,12,
  TEXT
end

functions = results.split("\n").map{|x| x.split(',')}.group_by{|x| x[1]}

functions.map do |k, v|
  [k].tap do |arr|
    arr << v.map do |partition|
      partition[0]
    end.first

    arr << v.map do |partition|
      partition[4]
    end.first

    v.each do |partition|
      arr << partition[3]
    end
  end.join(',')
end.each {|x| puts x}

